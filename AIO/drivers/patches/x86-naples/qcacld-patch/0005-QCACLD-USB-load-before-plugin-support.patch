diff --git a/CORE/HDD/src/wlan_hdd_main.c b/CORE/HDD/src/wlan_hdd_main.c
index f8224be..c6001dd 100644
--- a/CORE/HDD/src/wlan_hdd_main.c
+++ b/CORE/HDD/src/wlan_hdd_main.c
@@ -15264,6 +15264,10 @@ int hdd_hif_register_driver(void)
 
 	ret = hif_register_driver();
 
+#if defined(CONFIG_USB_PRELOAD)
+	if (ret == 0)
+		return 0;
+#else
 	if (ret) {
 		hddLog(LOGE, FL("HIF registration failed"));
 		return ret;
@@ -15284,6 +15288,7 @@ int hdd_hif_register_driver(void)
 		       wlan_comp.status, rc);
 
 	return wlan_comp.status;
+#endif /* CONFIG_USB_PRELOAD */
 }
 
 /**---------------------------------------------------------------------------
@@ -15414,6 +15419,7 @@ static int hdd_driver_init( void)
                                               adf_get_boottime() - start);
        return 0;
    }
+#endif /* CONFIG_USB_PRELOAD */
 
 
    } while (0);
diff --git a/CORE/SERVICES/HIF/USB/if_usb.c b/CORE/SERVICES/HIF/USB/if_usb.c
index a2edc1c..df1b263 100644
--- a/CORE/SERVICES/HIF/USB/if_usb.c
+++ b/CORE/SERVICES/HIF/USB/if_usb.c
@@ -42,6 +42,12 @@
 #include "epping_main.h"
 #include "vos_sched.h"
 
+#if defined(CONFIG_USB_PRELOAD)
+#include "wlan_btc_svc.h"
+#include "wlan_nlink_common.h"
+#include "vos_getBin.h"
+#endif
+
 #ifndef REMOVE_PKT_LOG
 #include "ol_txrx_types.h"
 #include "pktlog_ac_api.h"
@@ -226,6 +232,11 @@ hif_usb_probe(struct usb_interface *interface, const struct usb_device_id *id)
 	atomic_set(&sc->hdd_removed_processing, 0);
 	sc->hdd_removed_wait_cnt = 0;
 
+#if defined(CONFIG_USB_PRELOAD)
+	/* Send WLAN UP indication to Nlink Service */
+	if (!WLAN_IS_EPPING_ENABLED(vos_get_conparam()))
+		send_btc_nlink_msg(WLAN_MODULE_UP_IND, 0);
+#endif
 	sc->interface = interface;
 	sc->reboot_notifier.notifier_call = hif_usb_reboot;
 	register_reboot_notifier(&sc->reboot_notifier);
@@ -235,7 +246,9 @@ hif_usb_probe(struct usb_interface *interface, const struct usb_device_id *id)
 
 err_config:
 	hif_deinit_adf_ctx(ol_sc);
-	HIFDiagWriteCOLDRESET(sc->hif_device);
+	if (sc->hif_device != NULL)
+		HIFDiagWriteCOLDRESET(sc->hif_device);
+	
 	A_FREE(ol_sc);
 err_attach:
 	ret = -EIO;
@@ -512,13 +525,25 @@ static int is_usb_driver_register = 0;
 int hif_register_driver(void)
 {
 	int status = 0;
+#ifndef CONFIG_USB_PRELOAD
 	int probe_wait_cnt = 0;
+#endif
 	is_usb_driver_register = 1;
 	init_waitqueue_head(&hif_usb_unload_event_wq);
 	atomic_set(&hif_usb_unload_state, HIF_USB_UNLOAD_STATE_NULL);
 	usb_register_notify(&hif_usb_dev_nb);
 	status = usb_register(&hif_usb_drv_id);
 
+#if defined (CONFIG_USB_PRELOAD)
+	if (!WLAN_IS_EPPING_ENABLED(vos_get_conparam())) {
+		return status;
+	} else {
+		if (usb_sc && status == 0)
+			return 0;
+		else
+			return -1;
+	}
+#else
 	/* wait for usb probe done, 2s at most*/
 	while(!usb_sc && probe_wait_cnt < 10) {
 		A_MSLEEP(200);
@@ -529,6 +554,7 @@ int hif_register_driver(void)
 		return 0;
 	else
 		return -1;
+#endif
 }
 
 void hif_unregister_driver(void)
