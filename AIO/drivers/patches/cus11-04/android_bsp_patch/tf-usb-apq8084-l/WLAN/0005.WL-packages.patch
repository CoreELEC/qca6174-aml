diff -Nuar a/packages/apps/Settings/src/com/android/settings/TetherSettings.java b/packages/apps/Settings/src/com/android/settings/TetherSettings.java
--- a/packages/apps/Settings/src/com/android/settings/TetherSettings.java
+++ b/packages/apps/Settings/src/com/android/settings/TetherSettings.java
@@ -35,7 +35,7 @@
 import android.hardware.usb.UsbManager;
 import android.net.ConnectivityManager;
 import android.net.wifi.WifiConfiguration;
-import android.net.wifi.WifiManager;
+import android.net.wifi.WifiManagerWAP;
 import android.os.Bundle;
 import android.os.Environment;
 import android.os.SystemProperties;
@@ -97,7 +97,7 @@
     private Preference mCreateNetwork;
 
     private WifiApDialog mDialog;
-    private WifiManager mWifiManager;
+    private WifiManagerWAP mWifiManager;
     private WifiConfiguration mWifiConfig = null;
     private UserManager mUm;
 
@@ -199,7 +199,7 @@
 
     private void initWifiTethering() {
         final Activity activity = getActivity();
-        mWifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
+        mWifiManager = (WifiManagerWAP) getSystemService(Context.WAP_SERVICE);
         mWifiConfig = mWifiManager.getWifiApConfiguration();
         mSecurityType = getResources().getStringArray(R.array.wifi_ap_security);
 
@@ -651,16 +651,19 @@
     public void onClick(DialogInterface dialogInterface, int button) {
         if (button == DialogInterface.BUTTON_POSITIVE) {
             mWifiConfig = mDialog.getConfig();
+            WifiConfiguration oldConfig = mWifiManager.getWifiApConfiguration();
             if (mWifiConfig != null) {
                 /**
                  * if soft AP is stopped, bring up
                  * else restart with new config
                  * TODO: update config on a running access point when framework support is added
                  */
-                if (mWifiManager.getWifiApState() == WifiManager.WIFI_AP_STATE_ENABLED) {
+                if (mWifiManager.getWifiApState() == WifiManagerWAP.WIFI_AP_STATE_ENABLED) {
+                    mWifiConfig.apchannel = oldConfig.apchannel;
                     mWifiManager.setWifiApEnabled(null, false);
                     mWifiManager.setWifiApEnabled(mWifiConfig, true);
                 } else {
+                    mWifiConfig.apchannel = oldConfig.apchannel;
                     mWifiManager.setWifiApConfiguration(mWifiConfig);
                 }
                 int index = WifiApDialog.getSecurityTypeIndex(mWifiConfig);
diff -Nuar a/packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java b/packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java
--- a/packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java
+++ b/packages/apps/Settings/src/com/android/settings/widget/SettingsAppWidgetProvider.java
@@ -391,12 +391,13 @@
                     /**
                      * Disable tethering if enabling Wifi
                      */
+/*
                     int wifiApState = wifiManager.getWifiApState();
                     if (desiredState && ((wifiApState == WifiManager.WIFI_AP_STATE_ENABLING) ||
                                          (wifiApState == WifiManager.WIFI_AP_STATE_ENABLED))) {
                         wifiManager.setWifiApEnabled(null, false);
                     }
-
+*/
                     wifiManager.setWifiEnabled(desiredState);
                     return null;
                 }
diff -Nuar a/packages/apps/Settings/src/com/android/settings/wifi/WifiApEnabler.java b/packages/apps/Settings/src/com/android/settings/wifi/WifiApEnabler.java
--- a/packages/apps/Settings/src/com/android/settings/wifi/WifiApEnabler.java
+++ b/packages/apps/Settings/src/com/android/settings/wifi/WifiApEnabler.java
@@ -32,7 +32,7 @@
 import android.net.wifi.SupplicantState;
 import android.net.wifi.WifiConfiguration;
 import android.net.wifi.WifiInfo;
-import android.net.wifi.WifiManager;
+import android.net.wifi.WifiManagerWAP;
 import android.preference.SwitchPreference;
 import android.provider.Settings;
 import android.text.TextUtils;
@@ -44,7 +44,7 @@
     private final SwitchPreference mSwitch;
     private final CharSequence mOriginalSummary;
 
-    private WifiManager mWifiManager;
+    private WifiManagerWAP mWifiManager;
     private final IntentFilter mIntentFilter;
 
     ConnectivityManager mCm;
@@ -56,13 +56,13 @@
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();
-            if (WifiManager.WIFI_AP_STATE_CHANGED_ACTION.equals(action)) {
+            if (WifiManagerWAP.WIFI_AP_STATE_CHANGED_ACTION.equals(action)) {
                 handleWifiApStateChanged(intent.getIntExtra(
-                        WifiManager.EXTRA_WIFI_AP_STATE, WifiManager.WIFI_AP_STATE_FAILED));
-            } else if (WifiManager.WIFI_STATE_CHANGED_ACTION.equals(action)) {
+                        WifiManagerWAP.EXTRA_WIFI_AP_STATE, WifiManagerWAP.WIFI_AP_STATE_FAILED));
+            } else if (WifiManagerWAP.WIFI_STATE_CHANGED_ACTION.equals(action)) {
                 if (mWaitForWifiStateChange == true) {
                     handleWifiStateChanged(intent.getIntExtra(
-                            WifiManager.EXTRA_WIFI_STATE, WifiManager.WIFI_STATE_UNKNOWN));
+                            WifiManagerWAP.EXTRA_WIFI_STATE, WifiManagerWAP.WIFI_STATE_UNKNOWN));
                 }
             } else if (ConnectivityManager.ACTION_TETHER_STATE_CHANGED.equals(action)) {
                 ArrayList<String> available = intent.getStringArrayListExtra(
@@ -86,15 +86,15 @@
         switchPreference.setPersistent(false);
         mWaitForWifiStateChange = false;
 
-        mWifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
+        mWifiManager = (WifiManagerWAP) context.getSystemService(Context.WAP_SERVICE);
         mCm = (ConnectivityManager)mContext.getSystemService(Context.CONNECTIVITY_SERVICE);
 
         mWifiRegexs = mCm.getTetherableWifiRegexs();
 
-        mIntentFilter = new IntentFilter(WifiManager.WIFI_AP_STATE_CHANGED_ACTION);
+        mIntentFilter = new IntentFilter(WifiManagerWAP.WIFI_AP_STATE_CHANGED_ACTION);
         mIntentFilter.addAction(ConnectivityManager.ACTION_TETHER_STATE_CHANGED);
         mIntentFilter.addAction(Intent.ACTION_AIRPLANE_MODE_CHANGED);
-        mIntentFilter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION);
+        mIntentFilter.addAction(WifiManagerWAP.WIFI_STATE_CHANGED_ACTION);
     }
 
     public void resume() {
@@ -123,12 +123,14 @@
         /**
          * Disable Wifi if enabling tethering
          */
+/*
         int wifiState = mWifiManager.getWifiState();
         if (enable && ((wifiState == WifiManager.WIFI_STATE_ENABLING) ||
                     (wifiState == WifiManager.WIFI_STATE_ENABLED))) {
             mWifiManager.setWifiEnabled(false);
             Settings.Global.putInt(cr, Settings.Global.WIFI_SAVED_STATE, 1);
         }
+*/
         /**
          * Check if we have to wait for the WIFI_STATE_CHANGED intent
          * before we re-enable the Checkbox.
@@ -155,14 +157,15 @@
         /**
          * If needed, restore Wifi on tether disable
          */
+/*
         if (!enable) {
             if (wifiSavedState == 1) {
                 mWifiManager.setWifiEnabled(true);
                 Settings.Global.putInt(cr, Settings.Global.WIFI_SAVED_STATE, 0);
             }
         }
+*/
     }
-
     public void updateConfigSummary(WifiConfiguration wifiConfig) {
         String s = mContext.getString(
                 com.android.internal.R.string.wifi_tether_configure_ssid_default);
@@ -198,11 +201,11 @@
 
     private void handleWifiApStateChanged(int state) {
         switch (state) {
-            case WifiManager.WIFI_AP_STATE_ENABLING:
+            case WifiManagerWAP.WIFI_AP_STATE_ENABLING:
                 mSwitch.setSummary(R.string.wifi_tether_starting);
                 mSwitch.setEnabled(false);
                 break;
-            case WifiManager.WIFI_AP_STATE_ENABLED:
+            case WifiManagerWAP.WIFI_AP_STATE_ENABLED:
                 /**
                  * Summary on enable is handled by tether
                  * broadcast notice
@@ -211,11 +214,11 @@
                 /* Doesnt need the airplane check */
                 mSwitch.setEnabled(true);
                 break;
-            case WifiManager.WIFI_AP_STATE_DISABLING:
+            case WifiManagerWAP.WIFI_AP_STATE_DISABLING:
                 mSwitch.setSummary(R.string.wifi_tether_stopping);
                 mSwitch.setEnabled(false);
                 break;
-            case WifiManager.WIFI_AP_STATE_DISABLED:
+            case WifiManagerWAP.WIFI_AP_STATE_DISABLED:
                 mSwitch.setChecked(false);
                 mSwitch.setSummary(mOriginalSummary);
                 if (mWaitForWifiStateChange == false) {
@@ -231,8 +234,8 @@
 
     private void handleWifiStateChanged(int state) {
         switch (state) {
-            case WifiManager.WIFI_STATE_ENABLED:
-            case WifiManager.WIFI_STATE_UNKNOWN:
+            case WifiManagerWAP.WIFI_STATE_ENABLED:
+            case WifiManagerWAP.WIFI_STATE_UNKNOWN:
                 enableWifiSwitch();
                 mWaitForWifiStateChange = false;
                 break;
diff -Nuar a/packages/apps/Settings/src/com/android/settings/wifi/WifiEnabler.java b/packages/apps/Settings/src/com/android/settings/wifi/WifiEnabler.java
--- a/packages/apps/Settings/src/com/android/settings/wifi/WifiEnabler.java
+++ b/packages/apps/Settings/src/com/android/settings/wifi/WifiEnabler.java
@@ -204,12 +204,13 @@
         }
 
         // Disable tethering if enabling Wifi
+/*
         int wifiApState = mWifiManager.getWifiApState();
         if (isChecked && ((wifiApState == WifiManager.WIFI_AP_STATE_ENABLING) ||
                 (wifiApState == WifiManager.WIFI_AP_STATE_ENABLED))) {
             mWifiManager.setWifiApEnabled(null, false);
         }
-
+*/
         if (!mWifiManager.setWifiEnabled(isChecked)) {
             // Error
             mSwitchBar.setEnabled(true);
