diff -Nuar qcacld-new/Android.mk qcacld-new-change/Android.mk
--- qcacld-new/Android.mk
+++ qcacld-new-change/Android.mk
@@ -51,20 +51,20 @@
 
 ###########################################################
 # This is set once per LOCAL_PATH, not per (kernel) module
-KBUILD_OPTIONS := WLAN_ROOT=../$(WLAN_BLD_DIR)/qcacld-2.0
+KBUILD_OPTIONS := WLAN_ROOT=../$(WLAN_BLD_DIR)/qcacld-new
 # We are actually building wlan.ko here, as per the
 # requirement we are specifying <chipset>_wlan.ko as LOCAL_MODULE.
 # This means we need to rename the module to <chipset>_wlan.ko
 # after wlan.ko is built.
-KBUILD_OPTIONS += MODNAME=wlan
+KBUILD_OPTIONS += MODNAME=Tuffelo_wlan
 KBUILD_OPTIONS += BOARD_PLATFORM=$(TARGET_BOARD_PLATFORM)
 KBUILD_OPTIONS += $(WLAN_SELECT)
 KBUILD_OPTIONS += $(WLAN_ISOC_SELECT)
 KBUILD_OPTIONS += WLAN_OPEN_SOURCE=$(WLAN_OPEN_SOURCE)
 
 include $(CLEAR_VARS)
-LOCAL_MODULE              := $(WLAN_CHIPSET)_wlan.ko
-LOCAL_MODULE_KBUILD_NAME  := wlan.ko
+LOCAL_MODULE              := $(WLAN_CHIPSET)_wlan_Tuffelo.ko
+LOCAL_MODULE_KBUILD_NAME  := Tuffelo_wlan.ko
 LOCAL_MODULE_TAGS         := debug
 LOCAL_MODULE_DEBUG_ENABLE := true
 LOCAL_MODULE_PATH         := $(TARGET_OUT)/lib/modules/$(WLAN_CHIPSET)
diff -Nuar qcacld-new/CORE/CLD_TXRX/TXRX/ol_cfg.c qcacld-new-change/CORE/CLD_TXRX/TXRX/ol_cfg.c
--- qcacld-new/CORE/CLD_TXRX/TXRX/ol_cfg.c
+++ qcacld-new-change/CORE/CLD_TXRX/TXRX/ol_cfg.c
@@ -31,8 +31,9 @@
 unsigned int vow_config = 0;
 module_param(vow_config, uint, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
 MODULE_PARM_DESC(vow_config, "Do VoW Configuration");
+#if defined (CONFIG_1ST_WIFI)
 EXPORT_SYMBOL(vow_config);
-
+#endif
 /* FIX THIS -
  * For now, all these configuration parameters are hardcoded.
  * Many of these should actually be determined dynamically instead.
diff -Nuar qcacld-new/CORE/HDD/src/wlan_hdd_cfg80211.c qcacld-new-change/CORE/HDD/src/wlan_hdd_cfg80211.c
--- qcacld-new/CORE/HDD/src/wlan_hdd_cfg80211.c
+++ qcacld-new-change/CORE/HDD/src/wlan_hdd_cfg80211.c
@@ -3340,7 +3340,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_stats_ext_request
+        .doit = (void *)wlan_hdd_cfg80211_stats_ext_request
     },
 #endif
 #ifdef FEATURE_WLAN_EXTSCAN
@@ -3350,7 +3350,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_start
+        .doit = (void *)wlan_hdd_cfg80211_extscan_start
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
@@ -3358,14 +3358,14 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_stop
+        .doit = (void *)wlan_hdd_cfg80211_extscan_stop
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
         .info.subcmd = QCA_NL80211_VENDOR_SUBCMD_EXTSCAN_GET_VALID_CHANNELS,
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV,
-        .doit = wlan_hdd_cfg80211_extscan_get_valid_channels
+        .doit = (void *)wlan_hdd_cfg80211_extscan_get_valid_channels
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
@@ -3373,7 +3373,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_get_capabilities
+        .doit = (void *)wlan_hdd_cfg80211_extscan_get_capabilities
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
@@ -3381,7 +3381,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_get_cached_results
+        .doit = (void *)wlan_hdd_cfg80211_extscan_get_cached_results
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
@@ -3389,7 +3389,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_set_bssid_hotlist
+        .doit = (void *)wlan_hdd_cfg80211_extscan_set_bssid_hotlist
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
@@ -3397,7 +3397,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_reset_bssid_hotlist
+        .doit = (void *)wlan_hdd_cfg80211_extscan_reset_bssid_hotlist
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
@@ -3405,7 +3405,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_set_significant_change
+        .doit = (void *)wlan_hdd_cfg80211_extscan_set_significant_change
     },
     {
         .info.vendor_id = QCA_NL80211_VENDOR_ID,
@@ -3413,7 +3413,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_extscan_reset_significant_change
+        .doit = (void *)wlan_hdd_cfg80211_extscan_reset_significant_change
     },
 #endif /* FEATURE_WLAN_EXTSCAN */
 
@@ -3424,7 +3424,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_ll_stats_clear
+        .doit = (void *)wlan_hdd_cfg80211_ll_stats_clear
     },
 
     {
@@ -3433,7 +3433,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_ll_stats_set
+        .doit = (void *)wlan_hdd_cfg80211_ll_stats_set
     },
 
     {
@@ -3442,7 +3442,7 @@
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV |
                  WIPHY_VENDOR_CMD_NEED_RUNNING,
-        .doit = wlan_hdd_cfg80211_ll_stats_get
+        .doit = (void *)wlan_hdd_cfg80211_ll_stats_get
     },
 #endif /* WLAN_FEATURE_LINK_LAYER_STATS */
 
@@ -3452,7 +3452,7 @@
         .info.subcmd = QCA_NL80211_VENDOR_SUBCMD_APFIND,
         .flags = WIPHY_VENDOR_CMD_NEED_WDEV |
                  WIPHY_VENDOR_CMD_NEED_NETDEV,
-        .doit = wlan_hdd_cfg80211_apfind_cmd
+        .doit = (void *)wlan_hdd_cfg80211_apfind_cmd
     },
 #endif /* WLAN_FEATURE_APFIND */
 
diff -Nuar qcacld-new/CORE/HDD/src/wlan_hdd_debugfs.c qcacld-new-change/CORE/HDD/src/wlan_hdd_debugfs.c
--- qcacld-new/CORE/HDD/src/wlan_hdd_debugfs.c
+++ qcacld-new-change/CORE/HDD/src/wlan_hdd_debugfs.c
@@ -446,7 +446,11 @@
 VOS_STATUS hdd_debugfs_init(hdd_adapter_t *pAdapter)
 {
     hdd_context_t *pHddCtx = WLAN_HDD_GET_CTX(pAdapter);
-    pHddCtx->debugfs_phy = debugfs_create_dir("wlan_wcnss", 0);
+#if defined (CONFIG_1ST_WIFI)
+	pHddCtx->debugfs_phy = debugfs_create_dir("wlan_wcnss", 0);
+#else
+    pHddCtx->debugfs_phy = debugfs_create_dir("wlan_wcnss_tuffelo", 0);
+#endif
 
     if (NULL == pHddCtx->debugfs_phy)
         return VOS_STATUS_E_FAILURE;
diff -Nuar qcacld-new/CORE/HDD/src/wlan_hdd_hostapd.c qcacld-new-change/CORE/HDD/src/wlan_hdd_hostapd.c
--- qcacld-new/CORE/HDD/src/wlan_hdd_hostapd.c
+++ qcacld-new-change/CORE/HDD/src/wlan_hdd_hostapd.c
@@ -650,6 +650,7 @@
 }
 #endif /* SAP_AUTH_OFFLOAD */
 
+
 VOS_STATUS hdd_hostapd_SAPEventCB( tpSap_Event pSapEvent, v_PVOID_t usrDataForCallback)
 {
     hdd_adapter_t *pHostapdAdapter;
@@ -685,7 +686,7 @@
     unsigned long flags;
 #endif
     VOS_STATUS status = VOS_STATUS_SUCCESS;
-#if defined CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     int ret = 0;
 #endif
 
@@ -1371,7 +1372,8 @@
         case eSAP_DFS_NOL_GET:
             hddLog(VOS_TRACE_LEVEL_INFO,
                     FL("Received eSAP_DFS_NOL_GET event"));
-#if defined CONFIG_CNSS
+
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
             /* get the dfs nol from cnss */
             ret = cnss_wlan_get_dfs_nol(
                       pSapEvent->sapevt.sapDfsNolInfo.pDfsList,
@@ -1391,7 +1393,7 @@
 #endif
         case eSAP_DFS_NOL_SET:
             hddLog(VOS_TRACE_LEVEL_INFO, FL("Received eSAP_DFS_NOL_SET event"));
-#if defined CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
             /* set the dfs nol to cnss */
             ret = cnss_wlan_set_dfs_nol(
                     pSapEvent->sapevt.sapDfsNolInfo.pDfsList,
diff -Nuar qcacld-new/CORE/HDD/src/wlan_hdd_ipa.c qcacld-new-change/CORE/HDD/src/wlan_hdd_ipa.c
--- qcacld-new/CORE/HDD/src/wlan_hdd_ipa.c
+++ qcacld-new-change/CORE/HDD/src/wlan_hdd_ipa.c
@@ -2510,8 +2510,13 @@
 static int hdd_ipa_debugfs_init(struct hdd_ipa_priv *hdd_ipa)
 {
 #ifdef WLAN_OPEN_SOURCE
+#if defined (CONFIG_1ST_WIFI)
 	hdd_ipa->debugfs_dir = debugfs_create_dir("cld",
 					hdd_ipa->hdd_ctx->wiphy->debugfsdir);
+#else
+	hdd_ipa->debugfs_dir = debugfs_create_dir("cld_tuffelo",
+					hdd_ipa->hdd_ctx->wiphy->debugfsdir);
+#endif
 	if (!hdd_ipa->debugfs_dir)
 		return -ENOMEM;
 
diff -Nuar qcacld-new/CORE/HDD/src/wlan_hdd_main.c qcacld-new-change/CORE/HDD/src/wlan_hdd_main.c
--- qcacld-new/CORE/HDD/src/wlan_hdd_main.c
+++ qcacld-new-change/CORE/HDD/src/wlan_hdd_main.c
@@ -169,6 +169,8 @@
 #define MEMORY_DEBUG_STR ""
 #endif
 
+
+
 /* the Android framework expects this param even though we don't use it */
 #define BUF_LEN 20
 static char fwpath_buffer[BUF_LEN];
@@ -11900,7 +11902,7 @@
    rtnl_lock_enable = FALSE;
 #endif
 
-   pAdapter = hdd_open_adapter( pHddCtx, WLAN_HDD_INFRA_STATION, "wlan%d",
+   pAdapter = hdd_open_adapter( pHddCtx, WLAN_HDD_INFRA_STATION, "wap0",
        wlan_hdd_get_intf_addr(pHddCtx), rtnl_lock_enable );
 
 #ifdef WLAN_OPEN_P2P_INTERFACE
@@ -11935,7 +11937,7 @@
          }
       }
 
-      pP2pAdapter = hdd_open_adapter( pHddCtx, WLAN_HDD_P2P_DEVICE, "p2p%d",
+      pP2pAdapter = hdd_open_adapter( pHddCtx, WLAN_HDD_P2P_DEVICE, "p2p_wap0",
                         &pHddCtx->p2pDeviceAddress.bytes[0], rtnl_lock_enable );
 
       if ( NULL == pP2pAdapter )
@@ -12104,6 +12106,7 @@
    pHddCtx->kd_nl_init = 1;
 #endif /* WLAN_KD_READY_NOTIFIER */
 
+
    //Initialize the BTC service
    if(btc_activate_service(pHddCtx) != 0)
    {
@@ -12311,7 +12314,7 @@
 
    /* Initialize the RoC Request queue and work. */
    hdd_list_init((&pHddCtx->hdd_roc_req_q), MAX_ROC_REQ_QUEUE_ENTRY);
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
    cnss_init_work(&pHddCtx->rocReqWork, hdd_roc_req_work);
 #else
    INIT_WORK(&pHddCtx->rocReqWork, hdd_roc_req_work);
@@ -13541,7 +13544,7 @@
        }
    }
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
    cnss_set_wlan_unsafe_channel(hdd_ctxt->unsafe_channel_list, hdd_ctxt->unsafe_channel_count);
 #endif
 
@@ -13722,7 +13725,7 @@
 {
     int ret = 0;
     struct wlan_status_data data;
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     struct cnss_platform_cap cap;
 
     ret = cnss_get_platform_cap(&cap);
@@ -13752,7 +13755,7 @@
 {
     int ret = 0;
     struct wlan_version_data data;
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     struct cnss_platform_cap cap;
 
     ret = cnss_get_platform_cap(&cap);
diff -Nuar qcacld-new/CORE/MAC/src/pe/lim/limSendMessages.c qcacld-new-change/CORE/MAC/src/pe/lim/limSendMessages.c
--- qcacld-new/CORE/MAC/src/pe/lim/limSendMessages.c
+++ qcacld-new-change/CORE/MAC/src/pe/lim/limSendMessages.c
@@ -166,6 +166,7 @@
         return eSIR_MEM_ALLOC_FAILED;
     }
     vos_mem_copy((tANI_U8 *) pBcnParams,  pUpdatedBcnParams, sizeof(*pBcnParams));
+    pBcnParams->llbCoexist = 0;
     msgQ.type = WDA_UPDATE_BEACON_IND;
     msgQ.reserved = 0;
     msgQ.bodyptr = pBcnParams;
diff -Nuar qcacld-new/CORE/SERVICES/BMI/ol_fw.c qcacld-new-change/CORE/SERVICES/BMI/ol_fw.c
--- qcacld-new/CORE/SERVICES/BMI/ol_fw.c
+++ qcacld-new-change/CORE/SERVICES/BMI/ol_fw.c
@@ -53,7 +53,6 @@
 #if  defined(CONFIG_CNSS)
 #include <net/cnss.h>
 #endif
-
 #include "qwlan_version.h"
 
 #if defined(HIF_PCI) || defined(HIF_SDIO)
@@ -399,7 +398,7 @@
 		printk("%s: Unknown file type\n", __func__);
 		return -1;
 	case ATH_OTP_FILE:
-#if defined(CONFIG_CNSS) || defined(HIF_SDIO)
+#if (defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO)
 		filename = scn->fw_files.otp_data;
 #else
 		filename = QCA_OTP_FILE;
@@ -417,7 +416,7 @@
 		}
 #ifdef QCA_WIFI_FTM
 		if (vos_get_conparam() == VOS_FTM_MODE) {
-#if defined(CONFIG_CNSS) || defined(HIF_SDIO)
+#if (defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO)
 			filename = scn->fw_files.utf_file;
 #else
 			filename = QCA_UTF_FIRMWARE_FILE;
@@ -430,7 +429,7 @@
 			break;
 		}
 #endif
-#if defined(CONFIG_CNSS) || defined(HIF_SDIO)
+#if (defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO)
 		filename = scn->fw_files.image_file;
 #else
 		filename = QCA_FIRMWARE_FILE;
@@ -445,7 +444,7 @@
 	case ATH_BOARD_DATA_FILE:
 #ifdef QCA_WIFI_FTM
 		if (vos_get_conparam() == VOS_FTM_MODE) {
-#if defined(CONFIG_CNSS) || defined(HIF_SDIO)
+#if (defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO)
 			filename = scn->fw_files.utf_board_data;
 #else
 			filename = QCA_BOARD_DATA_FILE;
@@ -458,7 +457,7 @@
 			break;
 	}
 #endif /* QCA_WIFI_FTM */
-#if defined(CONFIG_CNSS) || defined(HIF_SDIO)
+#if (defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO)
 		filename = scn->fw_files.board_data;
 #else
 		filename = QCA_BOARD_DATA_FILE;
@@ -470,7 +469,7 @@
 	case ATH_SETUP_FILE:
 		if (vos_get_conparam() != VOS_FTM_MODE &&
 		   !WLAN_IS_EPPING_ENABLED(vos_get_conparam())) {
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)
 			printk("%s: no Setup file defined\n", __func__);
 			return -1;
 #else
@@ -499,7 +498,7 @@
 		if (file == ATH_OTP_FILE)
 			return -ENOENT;
 
-#if defined(QCA_WIFI_FTM) && (defined(CONFIG_CNSS) || defined(HIF_SDIO))
+#if defined(QCA_WIFI_FTM) && ((defined(CONFIG_CNSS) && defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO))
 		/* Try default board data file if FTM specific
 		 * board data file is not present. */
 		if (filename == scn->fw_files.utf_board_data) {
@@ -757,7 +756,7 @@
 }
 #endif
 
-#if  defined(CONFIG_CNSS) || defined(HIF_SDIO)
+#if (defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO)
 static struct ol_softc *ramdump_scn;
 #ifdef TARGET_DUMP_FOR_NON_QC_PLATFORM
 void *ol_fw_dram_addr=NULL;
@@ -801,6 +800,7 @@
 		goto out_fail;
 	}
 #if !defined(HIF_SDIO)
+#if defined(HIF_PCI)
 #ifdef DEBUG
 	ret = hif_pci_check_soc_status(ramdump_scn->hif_sc);
 	if (ret)
@@ -813,6 +813,7 @@
 	dump_CE_debug_register(ramdump_scn->hif_sc);
 #endif
 #endif
+#endif
 
 	if (HIFDiagReadMem(ramdump_scn->hif_hdl,
 		host_interest_item_address(ramdump_scn->target_type,
@@ -1072,8 +1073,10 @@
 	void *vos_context = vos_get_global_context(VOS_MODULE_ID_WDA, NULL);
 	tp_wma_handle wma = vos_get_context(VOS_MODULE_ID_WDA, vos_context);
 #else
+#ifdef HIF_PCI
 	int ret;
 #endif
+#endif
 
 #ifdef HIF_USB
 	/* Currently, only firmware crash triggers ol_target_failure.
@@ -1099,6 +1102,7 @@
 	vos_set_logp_in_progress(VOS_MODULE_ID_VOSS, TRUE);
 
 #ifdef CONFIG_CNSS
+#ifdef HIF_PCI
 	ret = hif_pci_check_fw_reg(scn->hif_sc);
 	if (0 == ret) {
 		ol_schedule_fw_indication_work(scn);
@@ -1107,6 +1111,7 @@
 		return;
 	}
 #endif
+#endif
 
 	printk("XXX TARGET ASSERTED XXX\n");
 
@@ -1187,7 +1192,7 @@
 	}
 #endif
 
-#if  defined(CONFIG_CNSS) || defined(HIF_SDIO)
+#if (defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)) || defined(HIF_SDIO)
 	/* Collect the RAM dump through a workqueue */
 	ol_schedule_ramdump_work(scn);
 #endif
@@ -1199,7 +1204,7 @@
 ol_configure_target(struct ol_softc *scn)
 {
 	u_int32_t param;
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)
 	struct cnss_platform_cap cap;
 #endif
 
@@ -1272,7 +1277,7 @@
 
 #endif /*HIF_PCI*/
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)
 	{
 		int ret;
 
@@ -1713,7 +1718,7 @@
 	A_STATUS ret;
 #endif
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS)&&  defined (CONFIG_1ST_WIFI)
 		if (0 != cnss_get_fw_files_for_target(&scn->fw_files,
 						scn->target_type,
 						scn->target_version)) {
diff -Nuar qcacld-new/CORE/SERVICES/COMMON/adf/adf_nbuf.c qcacld-new-change/CORE/SERVICES/COMMON/adf/adf_nbuf.c
--- qcacld-new/CORE/SERVICES/COMMON/adf/adf_nbuf.c
+++ qcacld-new-change/CORE/SERVICES/COMMON/adf/adf_nbuf.c
@@ -429,6 +429,7 @@
 }
 #endif /* QCA_PKT_PROTO_TRACE */
 
+#if defined (CONFIG_1ST_WIFI)
 EXPORT_SYMBOL(__adf_nbuf_alloc);
 EXPORT_SYMBOL(__adf_nbuf_free);
 EXPORT_SYMBOL(__adf_nbuf_ref);
@@ -448,3 +449,4 @@
 EXPORT_SYMBOL(__adf_nbuf_set_tid);
 EXPORT_SYMBOL(__adf_nbuf_get_exemption_type);
 EXPORT_SYMBOL(__adf_nbuf_dmamap_set_cb);
+#endif
diff -Nuar qcacld-new/CORE/SERVICES/COMMON/adf/adf_os_mem.h qcacld-new-change/CORE/SERVICES/COMMON/adf/adf_os_mem.h
--- qcacld-new/CORE/SERVICES/COMMON/adf/adf_os_mem.h
+++ qcacld-new-change/CORE/SERVICES/COMMON/adf/adf_os_mem.h
@@ -33,7 +33,6 @@
 
 #ifndef _ADF_OS_MEM_H
 #define _ADF_OS_MEM_H
-
 #include <adf_os_types.h>
 #include <adf_os_mem_pvt.h>
 #ifdef CONFIG_WCNSS_MEM_PRE_ALLOC
diff -Nuar qcacld-new/CORE/SERVICES/COMMON/adf/linux/adf_os_defer_pvt.c qcacld-new-change/CORE/SERVICES/COMMON/adf/linux/adf_os_defer_pvt.c
--- qcacld-new/CORE/SERVICES/COMMON/adf/linux/adf_os_defer_pvt.c
+++ qcacld-new-change/CORE/SERVICES/COMMON/adf/linux/adf_os_defer_pvt.c
@@ -56,5 +56,7 @@
     }
     ctx->fn(ctx->arg);
 }
+#if defined (CONFIG_1ST_WIFI)
 EXPORT_SYMBOL(__adf_os_defer_func);
 EXPORT_SYMBOL(__adf_os_defer_delayed_func);
+#endif
diff -Nuar qcacld-new/CORE/SERVICES/COMMON/adf/linux/adf_os_lock_pvt.c qcacld-new-change/CORE/SERVICES/COMMON/adf/linux/adf_os_lock_pvt.c
--- qcacld-new/CORE/SERVICES/COMMON/adf/linux/adf_os_lock_pvt.c
+++ qcacld-new-change/CORE/SERVICES/COMMON/adf/linux/adf_os_lock_pvt.c
@@ -30,5 +30,8 @@
 
 #include "adf_os_lock.h"
 
+#if defined (CONFIG_1ST_WIFI)
+
 EXPORT_SYMBOL(adf_os_spin_lock_bh_outline);
 EXPORT_SYMBOL(adf_os_spin_unlock_bh_outline);
+#endif
diff -Nuar qcacld-new/CORE/SERVICES/COMMON/adf/linux/adf_os_mem_pvt.c qcacld-new-change/CORE/SERVICES/COMMON/adf/linux/adf_os_mem_pvt.c
--- qcacld-new/CORE/SERVICES/COMMON/adf/linux/adf_os_mem_pvt.c
+++ qcacld-new-change/CORE/SERVICES/COMMON/adf/linux/adf_os_mem_pvt.c
@@ -34,6 +34,8 @@
 adf_os_declare_param(adf_dbg_mask, ADF_OS_PARAM_TYPE_INT32);
 
 
+#if defined (CONFIG_1ST_WIFI)
 EXPORT_SYMBOL(adf_os_mem_alloc_outline);
 EXPORT_SYMBOL(adf_os_mem_free_outline);
 EXPORT_SYMBOL(adf_os_mem_zero_outline);
+#endif
diff -Nuar qcacld-new/CORE/SERVICES/COMMON/ol_if_athvar.h qcacld-new-change/CORE/SERVICES/COMMON/ol_if_athvar.h
--- qcacld-new/CORE/SERVICES/COMMON/ol_if_athvar.h
+++ qcacld-new-change/CORE/SERVICES/COMMON/ol_if_athvar.h
@@ -45,7 +45,7 @@
 #include "ol_params.h"
 #include <wdi_event_api.h>
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
 #include <net/cnss.h>
 #endif
 
@@ -270,7 +270,7 @@
     u_int32_t               set_ht_vht_ies:1; /* true if vht ies are set on target */
     bool                    scn_cwmenable;    /*CWM enable/disable state*/
     u_int8_t                max_no_of_peers;
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     struct cnss_fw_files fw_files;
 #elif defined(HIF_SDIO)
     struct ol_fw_files fw_files;
diff -Nuar qcacld-new/CORE/SERVICES/COMMON/pktlog_ac_fmt.h qcacld-new-change/CORE/SERVICES/COMMON/pktlog_ac_fmt.h
--- qcacld-new/CORE/SERVICES/COMMON/pktlog_ac_fmt.h
+++ qcacld-new-change/CORE/SERVICES/COMMON/pktlog_ac_fmt.h
@@ -36,8 +36,12 @@
 #define MAX_TX_RATE_TBL 72
 #endif
 
-#ifdef __linux__
+#ifdef __linux__	
+#if defined (CONFIG_1ST_WIFI)
 #define PKTLOG_PROC_DIR "ath_pktlog"
+#else
+#define PKTLOG_PROC_DIR "ath_pktlog_tuffelo"
+#endif
 #define PKTLOG_PROC_SYSTEM "system"
 #define WLANDEV_BASENAME "cld"
 #endif
diff -Nuar qcacld-new/CORE/SERVICES/HIF/ath_procfs.c qcacld-new-change/CORE/SERVICES/HIF/ath_procfs.c
--- qcacld-new/CORE/SERVICES/HIF/ath_procfs.c
+++ qcacld-new-change/CORE/SERVICES/HIF/ath_procfs.c
@@ -41,7 +41,11 @@
 #include "vos_api.h"
 
 #define PROCFS_NAME		"athdiagpfs"
+#if defined (CONFIG_1ST_WIFI)
 #define PROCFS_DIR		"cld"
+#else
+#define PROCFS_DIR		"cld_tuffelo"
+#endif
 
 /**
  * This structure hold information about the /proc file
diff -Nuar qcacld-new/CORE/SERVICES/HIF/PCIe/hif_pci.c qcacld-new-change/CORE/SERVICES/HIF/PCIe/hif_pci.c
--- qcacld-new/CORE/SERVICES/HIF/PCIe/hif_pci.c
+++ qcacld-new-change/CORE/SERVICES/HIF/PCIe/hif_pci.c
@@ -55,7 +55,7 @@
 #include "hif_pci.h"
 #include "vos_trace.h"
 #include "vos_api.h"
-#if defined(QCA_WIFI_2_0) && !defined(QCA_WIFI_ISOC) && defined(CONFIG_CNSS)
+#if defined(QCA_WIFI_2_0) && !defined(QCA_WIFI_ISOC) && defined(CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
 #include <net/cnss.h>
 #endif
 #include <vos_getBin.h>
@@ -2479,7 +2479,7 @@
 /* worker thread to recover when target does not respond over PCIe */
 static void recovery_work_handler(struct work_struct *recovery)
 {
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     cnss_device_self_recovery();
 #endif
 }
diff -Nuar qcacld-new/CORE/SERVICES/HIF/PCIe/if_pci.c qcacld-new-change/CORE/SERVICES/HIF/PCIe/if_pci.c
--- qcacld-new/CORE/SERVICES/HIF/PCIe/if_pci.c
+++ qcacld-new-change/CORE/SERVICES/HIF/PCIe/if_pci.c
@@ -49,7 +49,7 @@
 #include "wlan_hdd_power.h"
 #endif
 #include "wlan_hdd_main.h"
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
 #include <net/cnss.h>
 #endif
 #include "epping_main.h"
@@ -924,7 +924,7 @@
 #endif
     ol_sc->max_no_of_peers = 1;
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     /* Get RAM dump memory address and size */
     if (!cnss_get_ramdump_mem(&ol_sc->ramdump_address, &ol_sc->ramdump_size)) {
         ol_sc->ramdump_base = ioremap(ol_sc->ramdump_address,
@@ -1019,7 +1019,7 @@
  * power up WLAN host driver when SSR happens. Most of this
  * function is duplicated from hif_pci_probe().
  */
-#if defined(QCA_WIFI_2_0) && !defined(QCA_WIFI_ISOC) && defined(CONFIG_CNSS)
+#if defined(QCA_WIFI_2_0) && !defined(QCA_WIFI_ISOC) && defined(CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
 int hif_pci_reinit(struct pci_dev *pdev, const struct pci_device_id *id)
 {
     void __iomem *mem;
@@ -1267,7 +1267,7 @@
 #endif
     ol_sc->max_no_of_peers = 1;
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     /* Get RAM dump memory address and size */
     if (!cnss_get_ramdump_mem(&ol_sc->ramdump_address, &ol_sc->ramdump_size)) {
         ol_sc->ramdump_base = ioremap(ol_sc->ramdump_address,
@@ -1632,7 +1632,7 @@
 
     pci_disable_msi(pdev);
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     if (scn->ramdump_base)
         iounmap(scn->ramdump_base);
 #endif
@@ -1652,7 +1652,7 @@
  * shutdown WLAN host driver when SSR happens. Most of this
  * function is duplicated from hif_pci_remove().
  */
-#if defined(QCA_WIFI_2_0) && !defined(QCA_WIFI_ISOC) && defined(CONFIG_CNSS)
+#if defined(QCA_WIFI_2_0) && !defined(QCA_WIFI_ISOC) && defined(CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
 void hif_pci_shutdown(struct pci_dev *pdev)
 {
     void __iomem *mem;
@@ -1693,7 +1693,7 @@
 
     pci_disable_msi(pdev);
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     if (scn->ramdump_base)
         iounmap(scn->ramdump_base);
 #endif
@@ -2029,7 +2029,7 @@
     return maxSize;
 }
 
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
 struct cnss_wlan_driver cnss_wlan_drv_id = {
     .name       = "hif_pci",
     .id_table   = hif_pci_id_table,
@@ -2060,7 +2060,7 @@
 
 int hif_register_driver(void)
 {
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
     return cnss_wlan_register_driver(&cnss_wlan_drv_id);
 #else
     return pci_register_driver(&hif_pci_drv_id);
@@ -2069,7 +2069,7 @@
 
 void hif_unregister_driver(void)
 {
-#ifdef CONFIG_CNSS
+#if defined (CONFIG_CNSS) &&  defined (CONFIG_1ST_WIFI)
 	cnss_wlan_unregister_driver(&cnss_wlan_drv_id);
 #else
 	pci_unregister_driver(&hif_pci_drv_id);
diff -Nuar qcacld-new/CORE/SERVICES/HIF/USB/if_usb.c qcacld-new-change/CORE/SERVICES/HIF/USB/if_usb.c
--- qcacld-new/CORE/SERVICES/HIF/USB/if_usb.c
+++ qcacld-new-change/CORE/SERVICES/HIF/USB/if_usb.c
@@ -370,6 +370,7 @@
 	}
 
 	/* No need to send WMI_PDEV_SUSPEND_CMDID to FW if WOW is enabled */
+#if 0
 	if (wma_is_wow_mode_selected(temp_module)) {
 		if (wma_enable_wow_in_fw(temp_module)) {
 			pr_warn("%s[%d]: fail\n", __func__, __LINE__);
@@ -384,7 +385,7 @@
 			return -1;
 		}
 	}
-
+#endif
 	sc->suspend_state = 1;
 	usb_hif_flush_all(device);
 
@@ -456,7 +457,7 @@
 	.resume = hif_usb_resume,
 	.reset_resume = hif_usb_reset_resume,
 #endif
-	.supports_autosuspend = true,
+	.supports_autosuspend = false,
 };
 
 void hif_init_adf_ctx(adf_os_device_t adf_dev, void *ol_sc)
diff -Nuar qcacld-new/CORE/SERVICES/WMI/wmi_tlv_helper.c qcacld-new-change/CORE/SERVICES/WMI/wmi_tlv_helper.c
--- qcacld-new/CORE/SERVICES/WMI/wmi_tlv_helper.c
+++ qcacld-new-change/CORE/SERVICES/WMI/wmi_tlv_helper.c
@@ -649,8 +649,8 @@
             /* Warning: some parameter truncation */
             if (tlv_size_diff > 0)
             {
-                wmi_tlv_print_error("%s: WARN: TLV truncated. tlv_size_diff=%d, curr_tlv_len=%d\n",
-                       __func__, tlv_size_diff, curr_tlv_len);
+                /*wmi_tlv_print_error("%s: WARN: TLV truncated. tlv_size_diff=%d, curr_tlv_len=%d\n",
+                       __func__, tlv_size_diff, curr_tlv_len);*/
             }
             /* TODO: this next line needs more comments and explanation */
             cmd_param_tlvs_ptr[tlv_index].tlv_ptr = (attr_struct_ptr.tag_varied_size && !curr_tlv_len)?NULL:(void *)buf_ptr;
@@ -662,8 +662,8 @@
             void *new_tlv_buf = NULL;
 
             /* Warning: Needs to allocate a larger structure and pad with zeros */
-            wmi_tlv_print_error("%s: WARN: TLV needs padding. tlv_size_diff=%d\n",
-                   __func__, tlv_size_diff);
+/*            wmi_tlv_print_error("%s: WARN: TLV needs padding. tlv_size_diff=%d\n",
+                   __func__, tlv_size_diff);*/
 #ifndef NO_DYNAMIC_MEM_ALLOC
             /* Dynamic memory allocation is supported */
             wmi_tlv_os_mem_alloc(os_handle, new_tlv_buf, (curr_tlv_len-tlv_size_diff));
diff -Nuar qcacld-new/CORE/SVC/external/wlan_nlink_common.h qcacld-new-change/CORE/SVC/external/wlan_nlink_common.h
--- qcacld-new/CORE/SVC/external/wlan_nlink_common.h
+++ qcacld-new-change/CORE/SVC/external/wlan_nlink_common.h
@@ -47,7 +47,7 @@
  * Preprocessor Definitions and Constants
  *-------------------------------------------------------------------------*/
 #define WLAN_NL_MAX_PAYLOAD   256     /* maximum size for netlink message*/
-#define WLAN_NLINK_PROTO_FAMILY  NETLINK_USERSOCK
+#define WLAN_NLINK_PROTO_FAMILY  NETLINK_UNUSED//NETLINK_USERSOCK
 #define WLAN_NLINK_MCAST_GRP_ID  0x01
 
 /*---------------------------------------------------------------------------
diff -Nuar qcacld-new/CORE/UTILS/FWLOG/dbglog_host.c qcacld-new-change/CORE/UTILS/FWLOG/dbglog_host.c
--- qcacld-new/CORE/UTILS/FWLOG/dbglog_host.c
+++ qcacld-new-change/CORE/UTILS/FWLOG/dbglog_host.c
@@ -46,7 +46,11 @@
 #endif /* WLAN_OPEN_SOURCE */
 #include "wmi_unified_priv.h"
 
+#if defined (CONFIG_1ST_WIFI)
 #define CLD_DEBUGFS_DIR          "cld"
+#else
+#define CLD_DEBUGFS_DIR          "cld_tuffelo"
+#endif
 #define DEBUGFS_BLOCK_NAME       "dbglog_block"
 
 #define ATH_MODULE_NAME fwlog
diff -Nuar qcacld-new/CORE/UTILS/PKTLOG/linux_ac.c qcacld-new-change/CORE/UTILS/PKTLOG/linux_ac.c
--- qcacld-new/CORE/UTILS/PKTLOG/linux_ac.c
+++ qcacld-new-change/CORE/UTILS/PKTLOG/linux_ac.c
@@ -47,9 +47,11 @@
 #define PKTLOG_TAG		"ATH_PKTLOG"
 #define PKTLOG_DEVNAME_SIZE	32
 #define MAX_WLANDEV		1
-
+#if defined (CONFIG_1ST_WIFI)
 #define PKTLOG_PROC_DIR		"ath_pktlog"
-
+#else
+#define PKTLOG_PROC_DIR		"ath_pktlog_tuffelo"
+#endif
 /* Permissions for creating proc entries */
 #define PKTLOG_PROC_PERM	0444
 #define PKTLOG_PROCSYS_DIR_PERM	0555
diff -Nuar qcacld-new/CORE/VOSS/inc/wlan_hdd_misc.h qcacld-new-change/CORE/VOSS/inc/wlan_hdd_misc.h
--- qcacld-new/CORE/VOSS/inc/wlan_hdd_misc.h
+++ qcacld-new-change/CORE/VOSS/inc/wlan_hdd_misc.h
@@ -31,10 +31,16 @@
 #ifdef MSM_PLATFORM
 #ifdef QC_WLAN_CHIPSET_QCA_CLD
 #ifdef QCA_WIFI_2_0
+#if defined (CONFIG_1ST_WIFI)
 #define WLAN_INI_FILE              "wlan/qca_cld/WCNSS_qcom_cfg.ini"
 #define WLAN_CFG_FILE              "wlan/qca_cld/WCNSS_cfg.dat"
 #define WLAN_MAC_FILE              "wlan/qca_cld/wlan_mac.bin"
 #else
+#define WLAN_INI_FILE              "wlan/qca_cld/Tuffelo/WCNSS_qcom_cfg.ini"
+#define WLAN_CFG_FILE              "wlan/qca_cld/Tuffelo/WCNSS_cfg.dat"
+#define WLAN_MAC_FILE              "wlan/qca_cld/Tuffelo/wlan_mac.bin"
+#endif
+#else
 #define WLAN_INI_FILE              "wlan/prima/WCNSS_qcom_cfg.ini"
 #define WLAN_CFG_FILE              "wlan/prima/WCNSS_cfg.dat"
 #endif // QCA_WIFI_2_0
diff -Nuar qcacld-new/firmware_bin/WCNSS_qcom_cfg.usb.ini qcacld-new-change/firmware_bin/WCNSS_qcom_cfg.usb.ini
--- qcacld-new/firmware_bin/WCNSS_qcom_cfg.usb.ini
+++ qcacld-new-change/firmware_bin/WCNSS_qcom_cfg.usb.ini
@@ -510,7 +510,7 @@
 
 # Enable or Disable Rx thread
 # 1=Enable (default), 0=Disable
-gEnableRxThread=0
+gEnableRxThread=1
 
 # Enable or Disable FW self-recovery
 # Currently, It's for USB only.
@@ -519,7 +519,7 @@
 
 # Enable or Disable SAP suspend
 # 1=Enable (default), 0=Disable
-gEnableSapSuspend=0
+gEnableSapSuspend=1
 
 # Enable TxBF
 gTxBFEnable=1
diff -Nuar qcacld-new/Kbuild qcacld-new-change/Kbuild
--- qcacld-new/Kbuild
+++ qcacld-new-change/Kbuild
@@ -6,24 +6,13 @@
 	KERNEL_BUILD := 0
 endif
 
-ifeq ($(CONFIG_CLD_HL_SDIO_CORE), y)
-	CONFIG_QCA_WIFI_SDIO := 1
-endif
-
-ifeq ($(CONFIG_QCA_WIFI_SDIO), 1)
-	CONFIG_ROME_IF = sdio
-endif
-
-ifndef CONFIG_ROME_IF
-	#use pci as default interface
-	CONFIG_ROME_IF = pci
-endif
-
+	CONFIG_ROME_IF = usb
+    CONFIG_HIF_USB_TASKLET := 1
 ifeq ($(KERNEL_BUILD),1)
 	# These are provided in external module based builds
 	# Need to explicitly define for Kernel-based builds
-	MODNAME := wlan
-	WLAN_ROOT := drivers/staging/qcacld-2.0
+	MODNAME := Tuffelo_wlan
+	WLAN_ROOT := drivers/staging/qcacld-new
 	WLAN_OPEN_SOURCE := 1
 endif
 
@@ -39,7 +28,6 @@
 
 	#JB kernel has PMKSA patches, hence enabling this flag
 	CONFIG_PRIMA_WLAN_OKC := y
-
 	# JB kernel has CPU enablement patches, so enable
 	ifeq ($(CONFIG_ROME_IF),pci)
 		CONFIG_PRIMA_WLAN_11AC_HIGH_TP := y
@@ -63,7 +51,7 @@
         #Flag to enable LTE CoEx feature
                 CONFIG_QCOM_LTE_COEX := y
         #Flag to enable LPSS feature
-                CONFIG_WLAN_FEATURE_LPSS := y
+#CONFIG_WLAN_FEATURE_LPSS := y
                 endif
         endif
 
diff -Nuar qcacld-new/Makefile qcacld-new-change/Makefile
--- qcacld-new/Makefile
+++ qcacld-new-change/Makefile
@@ -1,7 +1,7 @@
 KERNEL_SRC ?= /lib/modules/$(shell uname -r)/build
 
 KBUILD_OPTIONS := WLAN_ROOT=$(PWD)
-KBUILD_OPTIONS += MODNAME=wlan
+KBUILD_OPTIONS += MODNAME=Tuffelo_wlan
 
 # Determine if the driver license is Open source or proprietary
 # This is determined under the assumption that LICENSE doesn't change.
