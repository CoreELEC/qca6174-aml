diff -Naur 3d_adapter_orig/3d_adapter/btif_3d_adapter.c 3d_adapter_patched/3d_adapter/btif_3d_adapter.c
--- 3d_adapter_orig/3d_adapter/btif_3d_adapter.c	2016-03-03 17:56:09.642444011 +0800
+++ 3d_adapter_patched/3d_adapter/btif_3d_adapter.c	2016-03-03 17:55:05.722442841 +0800
@@ -12,11 +12,13 @@
 #include <stdlib.h>
 #include <errno.h>
 #include <string.h>
+#include <hardware/bt_3d_q.h>
 
 #define LOG_TAG "BT_3D_ADAPTER"
 
 #include "btif_common.h"
 #include "btif_util.h"
+#include "btif_3d.h"
 
 
 
@@ -24,6 +26,36 @@
 
 
 
+void bt3d_conn_announcement(bt_bdaddr_t *bd_addr, uint8_t assos, uint8_t usr_batt_req, uint8_t battery)
+{
+    if(assos)
+    {
+        HAL_CBACK(d_callbacks, assos_notif_cb, bd_addr);
+    }
+    //usr_batt_req is used as legacy flag, =1 means legacy
+    if((!usr_batt_req) && (battery != BATTERY_LEVEL_NOT_SUPPORTED))
+    {
+        HAL_CBACK(d_callbacks, batt_level_cb, bd_addr, battery);
+    }
+}
+
+void bt3d_period_change(uint16_t period)
+{
+    HAL_CBACK(d_callbacks, frame_period_cb, period);
+}
+
+void bt3d_legacy_conn_accouncement(bt_bdaddr_t *bd_addr)
+{
+
+}
+
+bt3d_callbacks_q_t bt3d_callbacks = {
+    sizeof(bt3d_callbacks),
+    bt3d_conn_announcement,
+    bt3d_period_change,
+    bt3d_legacy_conn_accouncement
+};
+
 /************************************************************************************
 **  Static variables
 ************************************************************************************/
@@ -32,6 +64,7 @@
 {
     BTIF_TRACE_EVENT("BT_3D_CALL_IN: %s", __FUNCTION__);
     d_callbacks = callbacks;
+    btif_3d_init((void*) &bt3d_callbacks);
     return BT_STATUS_SUCCESS;
 }
 
@@ -40,6 +73,7 @@
     bt_status_t status;
 
     BTIF_TRACE_EVENT("BT_3D_CALL_IN: %s,%d", __FUNCTION__,mode);
+    status = btif_3d_set_display_mode((bt3d_display_mode_t)mode);
 
     return status;
 }
@@ -51,12 +85,22 @@
     BTIF_TRACE_EVENT("BT_3D %d,%d,%d,%d",data.left_open_offset,data.left_close_offset,data.right_open_offset,data.right_close_offset);
     BTIF_TRACE_EVENT("DUAL_VIEW: %d", data.dual_view);
     
+    bt3d_broadcast_data_t bcast_data;
+    bcast_data.dual_view = 0;
+    bcast_data.left_open_offset = data.left_open_offset;
+    bcast_data.left_close_offset  = data.left_close_offset;
+    bcast_data.right_open_offset  = data.right_open_offset;
+    bcast_data.right_close_offset = data.right_close_offset;
+
+    btif_3d_set_bcast_data(bcast_data);
+
     return BT_STATUS_SUCCESS;
 }
 
 static void cleanup(void)
 {
     BTIF_TRACE_EVENT("BT_3D_CALL_IN: %s", __FUNCTION__);
+    btif_3d_cleanup();
 }
 
 
diff -Naur 3d_adapter_orig/btif/src/bluetooth.c 3d_adapter_patched/btif/src/bluetooth.c
--- 3d_adapter_orig/btif/src/bluetooth.c	2016-03-03 17:07:51.150390964 +0800
+++ 3d_adapter_patched/btif/src/bluetooth.c	2016-03-03 17:52:12.050439663 +0800
@@ -61,10 +61,10 @@
 **  Static variables
 ************************************************************************************/
 
-bt_callbacks_t *bt_hal_cbacks = NULL;
+extern bt_callbacks_t *bt_hal_cbacks;
 
 /** Operating System specific callouts for resource management */
-bt_os_callouts_t *bt_os_callouts = NULL;
+extern bt_os_callouts_t *bt_os_callouts;
 
 /************************************************************************************
 **  Static functions
@@ -377,6 +377,9 @@
     if (is_profile(profile_id, BT_PROFILE_AV_RC_ID))
         return btif_rc_get_interface();
 
+    if (is_profile(profile_id, BT_PROFILE_3D_SYNC_ID))
+        return btif_3d_get_interface();
+
     if (is_profile(profile_id, BT_PROFILE_AV_RC_CTRL_ID))
         return btif_rc_ctrl_get_interface();
 
