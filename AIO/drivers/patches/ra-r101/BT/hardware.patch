diff -Naur hardware.orig/libhardware/include/hardware/bluetooth.h hardware/libhardware/include/hardware/bluetooth.h
--- hardware.orig/libhardware/include/hardware/bluetooth.h	2016-03-16 17:22:37.126963475 +0800
+++ hardware/libhardware/include/hardware/bluetooth.h	2016-03-16 17:20:15.578960885 +0800
@@ -396,6 +396,16 @@
 /* Receive any HCI event from controller. Must be in DUT Mode for this callback to be received */
 typedef void (*dut_mode_recv_callback)(uint16_t opcode, uint8_t *buf, uint8_t len);
 
+#define CUST_NEED_WAKEUP_ACK
+/** Host sleep notify Callback */
+/* Receive any HCI event from controller. */
+typedef void (*host_sleep_notify_callback)(uint8_t status);
+#ifdef CUST_NEED_WAKEUP_ACK
+/** Host wakeup ack Callback */
+/* Receive any HCI event from controller. */
+typedef void (*host_wakeup_ack_callback)(uint8_t status);
+#endif
+
 /* LE Test mode callbacks
 * This callback shall be invoked whenever the le_tx_test, le_rx_test or le_test_end is invoked
 * The num_packets is valid only for le_test_end command */
@@ -427,6 +437,10 @@
     acl_state_changed_callback acl_state_changed_cb;
     callback_thread_event thread_evt_cb;
     dut_mode_recv_callback dut_mode_recv_cb;
+    host_sleep_notify_callback host_sleep_notify_cb;
+#ifdef CUST_NEED_WAKEUP_ACK
+    host_wakeup_ack_callback host_wakeup_ack_cb;
+#endif
     le_test_mode_callback le_test_mode_cb;
     energy_info_callback energy_info_cb;
     le_lpp_write_rssi_thresh_callback          le_lpp_write_rssi_thresh_cb;
@@ -572,6 +586,13 @@
     /* Send any test HCI (vendor-specific) command to the controller. Must be in DUT Mode */
     int (*dut_mode_send)(uint16_t opcode, uint8_t *buf, uint8_t len);
 
+    /* Send sleep notify HCI (vendor-specific) command to the controller. */
+    int (*host_sleep_notify)(uint16_t sleep_delay/*ms*/);
+#ifdef CUST_NEED_WAKEUP_ACK
+    /* Send wakeup ack HCI (vendor-specific) command to the controller. */
+    int (*host_wakeup_ack)();
+#endif
+
     /** BLE Test Mode APIs */
     /* opcode MUST be one of: LE_Receiver_Test, LE_Transmitter_Test, LE_Test_End */
     int (*le_test_mode)(uint16_t opcode, uint8_t *buf, uint8_t len);
