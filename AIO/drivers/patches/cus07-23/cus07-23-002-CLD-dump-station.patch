diff -Nuar qcacld-new.orig/CORE/HDD/inc/wlan_hdd_main.h qcacld-new/CORE/HDD/inc/wlan_hdd_main.h
--- qcacld-new.orig/CORE/HDD/inc/wlan_hdd_main.h	2016-06-27 11:32:21.647013214 +0800
+++ qcacld-new/CORE/HDD/inc/wlan_hdd_main.h	2016-06-27 13:22:42.923265548 +0800
@@ -1147,6 +1147,7 @@
     struct work_struct ext_wow_work;
 #endif
 #endif
+    v_TIME_t last_active_time;
 };
 
 #define WLAN_HDD_GET_STATION_CTX_PTR(pAdapter) (&(pAdapter)->sessionCtx.station)
diff -Nuar qcacld-new.orig/CORE/HDD/src/wlan_hdd_cfg80211.c qcacld-new/CORE/HDD/src/wlan_hdd_cfg80211.c
--- qcacld-new.orig/CORE/HDD/src/wlan_hdd_cfg80211.c	2016-06-27 11:32:21.655013214 +0800
+++ qcacld-new/CORE/HDD/src/wlan_hdd_cfg80211.c	2016-06-27 13:22:53.479265950 +0800
@@ -10836,13 +10836,14 @@
 }
 #endif
 static int __wlan_hdd_cfg80211_get_station(struct wiphy *wiphy,
-                                           struct net_device *dev,
+                                           struct net_device *dev, int idx,
                                            u8* mac, struct station_info *sinfo)
 {
     hdd_adapter_t *pAdapter = WLAN_HDD_GET_PRIV_PTR( dev );
     hdd_station_ctx_t *pHddStaCtx = WLAN_HDD_GET_STATION_CTX_PTR(pAdapter);
     int ssidlen = pHddStaCtx->conn_info.SSID.SSID.length;
     tANI_U8 rate_flags;
+    v_TIME_t cur_time = vos_timer_get_system_time();
 
     hdd_context_t *pHddCtx = (hdd_context_t*) wiphy_priv(wiphy);
     hdd_config_t  *pCfg    = pHddCtx->cfg_ini;
@@ -10869,9 +10870,11 @@
     tANI_U32 vht_mcs_map;
     eDataRate11ACMaxMcs vhtMaxMcs;
 #endif /* WLAN_FEATURE_11AC */
-
+    if(idx != 0)
+        return -ENOENT;
     ENTER();
 
+    memcpy(mac, pAdapter->macAddressCurrent.bytes, VOS_MAC_ADDR_SIZE);
     if ((eConnectionState_Associated != pHddStaCtx->conn_info.connState) ||
             (0 == ssidlen))
     {
@@ -10889,7 +10892,8 @@
                    "%s: HDD context is not valid", __func__);
         return status;
     }
-
+    sinfo->inactive_time = cur_time - pAdapter->last_active_time;
+    sinfo->filled |= STATION_INFO_INACTIVE_TIME;
     wlan_hdd_get_rssi(pAdapter, &sinfo->signal);
     sinfo->filled |= STATION_INFO_SIGNAL;
 
@@ -11279,17 +11283,13 @@
     sinfo->tx_bytes = pAdapter->stats.tx_bytes;
     sinfo->filled |= STATION_INFO_TX_BYTES;
 
-    sinfo->tx_packets =
-       pAdapter->hdd_stats.summary_stat.tx_frm_cnt[0] +
-       pAdapter->hdd_stats.summary_stat.tx_frm_cnt[1] +
-       pAdapter->hdd_stats.summary_stat.tx_frm_cnt[2] +
-       pAdapter->hdd_stats.summary_stat.tx_frm_cnt[3];
+    sinfo->tx_packets = pAdapter->stats.tx_packets;
 
     sinfo->tx_retries =
-       pAdapter->hdd_stats.summary_stat.retry_cnt[0] +
-       pAdapter->hdd_stats.summary_stat.retry_cnt[1] +
-       pAdapter->hdd_stats.summary_stat.retry_cnt[2] +
-       pAdapter->hdd_stats.summary_stat.retry_cnt[3];
+       pAdapter->hdd_stats.summary_stat.multiple_retry_cnt[0] +
+       pAdapter->hdd_stats.summary_stat.multiple_retry_cnt[1] +
+       pAdapter->hdd_stats.summary_stat.multiple_retry_cnt[2] +
+       pAdapter->hdd_stats.summary_stat.multiple_retry_cnt[3];
 
     sinfo->tx_failed =
        pAdapter->hdd_stats.summary_stat.fail_cnt[0] +
@@ -11322,7 +11322,20 @@
     int ret;
 
     vos_ssr_protect(__func__);
-    ret = __wlan_hdd_cfg80211_get_station(wiphy, dev, mac, sinfo);
+    ret = __wlan_hdd_cfg80211_get_station(wiphy, dev, 0, mac, sinfo);
+    vos_ssr_unprotect(__func__);
+
+    return ret;
+}
+
+static int wlan_hdd_cfg80211_dump_station(struct wiphy *wiphy,
+                                         struct net_device *dev,
+                                         int idx, u8* mac, struct station_info *sinfo)
+{
+    int ret;
+
+    vos_ssr_protect(__func__);
+    ret = __wlan_hdd_cfg80211_get_station(wiphy, dev, idx, mac, sinfo);
     vos_ssr_unprotect(__func__);
 
     return ret;
@@ -15091,6 +15104,7 @@
      .set_default_mgmt_key = wlan_hdd_set_default_mgmt_key,
      .set_txq_params = wlan_hdd_set_txq_params,
      .get_station = wlan_hdd_cfg80211_get_station,
+     .dump_station = wlan_hdd_cfg80211_dump_station,
      .set_power_mgmt = wlan_hdd_cfg80211_set_power_mgmt,
      .del_station  = wlan_hdd_cfg80211_del_station,
      .add_station  = wlan_hdd_cfg80211_add_station,
diff -Nuar qcacld-new.orig/CORE/HDD/src/wlan_hdd_tx_rx.c qcacld-new/CORE/HDD/src/wlan_hdd_tx_rx.c
--- qcacld-new.orig/CORE/HDD/src/wlan_hdd_tx_rx.c	2016-06-27 11:32:21.651013214 +0800
+++ qcacld-new/CORE/HDD/src/wlan_hdd_tx_rx.c	2016-06-27 13:22:42.931265548 +0800
@@ -1110,6 +1110,7 @@
    pAdapter->stats.tx_bytes += skb->len;
    ++pAdapter->stats.tx_packets;
    ++pAdapter->hdd_stats.hddTxRxStats.pkt_tx_count;
+   pAdapter->last_active_time = vos_timer_get_system_time();
 
    /*
     * TODO: Should we stop net queues when txrx returns non-NULL?.
@@ -2282,6 +2283,7 @@
    ++pAdapter->hdd_stats.hddTxRxStats.rxPackets;
    ++pAdapter->stats.rx_packets;
    pAdapter->stats.rx_bytes += skb->len;
+   pAdapter->last_active_time = vos_timer_get_system_time();
 #ifdef WLAN_FEATURE_HOLD_RX_WAKELOCK
    vos_wake_lock_timeout_acquire(&pHddCtx->rx_wake_lock,
                                  HDD_WAKE_LOCK_DURATION);
