diff -Naur qcacld-new-clean/CORE/HDD/inc/wlan_hdd_wmm.h qcacld-new/CORE/HDD/inc/wlan_hdd_wmm.h
--- qcacld-new-clean/CORE/HDD/inc/wlan_hdd_wmm.h
+++ qcacld-new/CORE/HDD/inc/wlan_hdd_wmm.h
@@ -265,9 +265,14 @@
 
   @return         : Qdisc queue index
   ===========================================================================*/
-
-v_U16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb);
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0)
+	v_U16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb,
+											void *accel_priv, select_queue_fallback_t fallback);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)
+	v_U16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb, void *accel_priv);
+#else
+	v_U16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb);
+#endif
 
 
 /**============================================================================
diff -Naur qcacld-new-clean/CORE/HDD/src/wlan_hdd_assoc.c qcacld-new/CORE/HDD/src/wlan_hdd_assoc.c
--- qcacld-new-clean/CORE/HDD/src/wlan_hdd_assoc.c
+++ qcacld-new/CORE/HDD/src/wlan_hdd_assoc.c
@@ -1881,6 +1881,10 @@
                                            eRoamCmdStatus roamStatus,
                                            eCsrRoamResult roamResult )
 {
+	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0))
+	struct ieee80211_channel *chan;
+	#endif
+
    hddLog(VOS_TRACE_LEVEL_INFO, "%s: %s: id %d, status %d, result %d",
           __func__, pAdapter->dev->name, roamId, roamStatus, roamResult);
 
@@ -1933,8 +1937,13 @@
                       __func__, pAdapter->dev->name);
                return;
             }
-
+			#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0))
+			chan = ieee80211_get_channel(pAdapter->wdev.wiphy,
+										(int)pRoamInfo->pBssDesc->channelId);
+			cfg80211_ibss_joined(pAdapter->dev, bss->bssid, chan, GFP_KERNEL);
+			#else
             cfg80211_ibss_joined(pAdapter->dev, bss->bssid, GFP_KERNEL);
+			#endif
             cfg80211_put_bss(
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0))
                              pHddCtx->wiphy,
diff -Naur qcacld-new-clean/CORE/HDD/src/wlan_hdd_main.c qcacld-new/CORE/HDD/src/wlan_hdd_main.c
--- qcacld-new-clean/CORE/HDD/src/wlan_hdd_main.c
+++ qcacld-new/CORE/HDD/src/wlan_hdd_main.c
@@ -266,8 +266,15 @@
 void wlan_hdd_restart_timer_cb(v_PVOID_t usrDataForCallback);
 void hdd_set_wlan_suspend_mode(bool suspend);
 
-v_U16_t hdd_select_queue(struct net_device *dev,
-    struct sk_buff *skb);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0)
+v_U16_t hdd_select_queue(struct net_device * dev, struct sk_buff *skb,
+											void *accel_priv, select_queue_fallback_t fallback);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)
+v_U16_t hdd_select_queue(struct net_device * dev, struct sk_buff *skb, void *accel_priv);
+#else
+v_U16_t hdd_select_queue(struct net_device * dev, struct sk_buff *skb);
+#endif
+
 
 #ifdef WLAN_FEATURE_PACKET_FILTERING
 static void hdd_set_multicast_list(struct net_device *dev);
@@ -10276,8 +10283,14 @@
   \return - ac, Queue Index/access category corresponding to UP in IP header
 
   --------------------------------------------------------------------------*/
-v_U16_t hdd_select_queue(struct net_device *dev,
-    struct sk_buff *skb)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0)
+v_U16_t hdd_select_queue(struct net_device * dev, struct sk_buff *skb,
+											void *accel_priv, select_queue_fallback_t fallback)
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)
+v_U16_t hdd_select_queue(struct net_device * dev, struct sk_buff *skb, void *accel_priv)
+#else
+v_U16_t hdd_select_queue(struct net_device * dev, struct sk_buff *skb)
+#endif
 {
    return hdd_wmm_select_queue(dev, skb);
 }
diff -Naur qcacld-new-clean/CORE/HDD/src/wlan_hdd_tx_rx.c qcacld-new/CORE/HDD/src/wlan_hdd_tx_rx.c
--- qcacld-new-clean/CORE/HDD/src/wlan_hdd_tx_rx.c
+++ qcacld-new/CORE/HDD/src/wlan_hdd_tx_rx.c
@@ -456,7 +456,12 @@
    hdd_adapter_t* pAdapter = container_of(work, hdd_adapter_t, monTxWorkQueue);
    hdd_mon_tx_mgmt_pkt(pAdapter);
 }
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0)
+static u16 test_select_queue(struct net_device *dev, struct sk_buff *skb)
+{
+	return 0;
+}
+#endif
 int hdd_mon_hard_start_xmit(struct sk_buff *skb, struct net_device *dev)
 {
    v_U16_t rt_hdr_len;
@@ -548,8 +553,13 @@
       }
 
       skb->protocol = htons(HDD_ETHERTYPE_802_1_X);
-
-      hdd_hostapd_select_queue(pPgBkAdapter->dev, skb);
+	  #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0)
+	  hdd_hostapd_select_queue(pPgBkAdapter->dev, skb, NULL, test_select_queue);
+	  #elif LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)
+	  hdd_hostapd_select_queue(pPgBkAdapter->dev, skb, NULL);
+	  #else
+	  hdd_hostapd_select_queue(pPgBkAdapter->dev, skb);
+	  #endif
       return hdd_softap_hard_start_xmit( skb, pPgBkAdapter->dev );
    }
    else
diff -Naur qcacld-new-clean/CORE/HDD/src/wlan_hdd_wmm.c qcacld-new/CORE/HDD/src/wlan_hdd_wmm.c
--- qcacld-new-clean/CORE/HDD/src/wlan_hdd_wmm.c
+++ qcacld-new/CORE/HDD/src/wlan_hdd_wmm.c
@@ -1865,7 +1865,14 @@
 
   @return         : Qdisc queue index
   ===========================================================================*/
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,14,0)
+v_U16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb,
+										void *accel_priv, select_queue_fallback_t fallback)
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(3,13,0)
+v_U16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb, void *accel_priv)
+#else
 v_U16_t hdd_hostapd_select_queue(struct net_device * dev, struct sk_buff *skb)
+#endif
 {
    WLANTL_ACEnumType ac;
    sme_QosWmmUpType up = SME_QOS_WMM_UP_BE;
diff -Naur qcacld-new-clean/CORE/SERVICES/COMMON/osdep_adf.h qcacld-new/CORE/SERVICES/COMMON/osdep_adf.h
--- qcacld-new-clean/CORE/SERVICES/COMMON/osdep_adf.h
+++ qcacld-new/CORE/SERVICES/COMMON/osdep_adf.h
@@ -160,9 +160,11 @@
 typedef unsigned long TQUEUE_ARG;
 #define mark_bh(a)
 
+typedef struct ctl_table _ctl_table;
+
 #define ATH_SYSCTL_DECL(f, ctl, write, filp, buffer, lenp, ppos) \
-    f(ctl_table *ctl, int write, void *buffer,                   \
-        size_t *lenp, loff_t *ppos)
+	f(_ctl_table *ctl, int write, void *buffer, size_t *lenp, loff_t *ppos)
+
 #define ATH_SYSCTL_PROC_DOINTVEC(ctl, write, filp, buffer, lenp, ppos) \
     proc_dointvec(ctl, write, buffer, lenp, ppos)
 #define ATH_SYSCTL_PROC_DOSTRING(ctl, write, filp, buffer, lenp, ppos) \
diff -Naur qcacld-new-clean/Kbuild qcacld-new/Kbuild
--- qcacld-new-clean/Kbuild
+++ qcacld-new/Kbuild
@@ -14,11 +14,12 @@
 	CONFIG_ROME_IF = sdio
 endif
 
-ifndef CONFIG_ROME_IF
-	#use pci as default interface
-	CONFIG_ROME_IF = pci
+ifndef CONFIG_TUFELLO_IF
+	#use usb as default interface
+	CONFIG_TUFELLO_IF = usb
 endif
 
+
 ifeq ($(KERNEL_BUILD),1)
 	# These are provided in external module based builds
 	# Need to explicitly define for Kernel-based builds
@@ -47,6 +48,9 @@
 	ifeq ($(CONFIG_ROME_IF),usb)
 		CONFIG_PRIMA_WLAN_11AC_HIGH_TP := n
 	endif
+	ifeq ($(CONFIG_TUFELLO_IF),usb)
+		CONFIG_PRIMA_WLAN_11AC_HIGH_TP := n
+	endif
 	ifeq ($(CONFIG_ROME_IF),sdio)
 		CONFIG_PRIMA_WLAN_11AC_HIGH_TP := n
 	endif
@@ -74,6 +78,9 @@
         ifeq ($(CONFIG_ROME_IF),usb)
                 CONFIG_WLAN_FEATURE_11W := y
         endif
+		ifeq ($(CONFIG_TUFELLO_IF),usb)
+                CONFIG_WLAN_FEATURE_11W := y
+    	endif
         ifeq ($(CONFIG_ROME_IF),sdio)
                 CONFIG_WLAN_FEATURE_11W := y
         endif
@@ -85,6 +92,9 @@
         ifeq ($(CONFIG_ROME_IF),usb)
                 CONFIG_LINUX_QCMBR :=y
         endif
+		ifeq ($(CONFIG_TUFELLO_IF),usb)
+                CONFIG_LINUX_QCMBR :=y
+        endif
 endif
 
 ifeq ($(CONFIG_X86), y)
@@ -127,6 +137,9 @@
 ifeq ($(CONFIG_ROME_IF),usb)
 	CONFIG_ATH_11AC_TXCOMPACT := 0
 endif
+ifeq ($(CONFIG_TUFELLO_IF),usb)
+	CONFIG_ATH_11AC_TXCOMPACT := 0
+endif
 ifeq ($(CONFIG_QCA_WIFI_SDIO), 1)
 CONFIG_ATH_11AC_TXCOMPACT := 0
 endif
@@ -138,6 +151,9 @@
 ifeq ($(CONFIG_ROME_IF),usb)
 	CONFIG_PER_VDEV_TX_DESC_POOL := 1
 endif
+ifeq ($(CONFIG_TUFELLO_IF),usb)
+	CONFIG_PER_VDEV_TX_DESC_POOL := 1
+endif
 ifeq ($(CONFIG_QCA_WIFI_SDIO), 1)
 	CONFIG_PER_VDEV_TX_DESC_POOL := 0
 endif
@@ -161,6 +177,10 @@
 ifeq ($(CONFIG_ROME_IF),usb)
 	CONFIG_HIF_USB := 1
 endif
+ifeq ($(CONFIG_TUFELLO_IF),usb)
+	CONFIG_HIF_USB := 1
+	CONFIG_HIF_USB_TASKLET := 1
+endif
 
 #Enable pci read/write config functions
 ifeq ($(CONFIG_ROME_IF),pci)
