#
# Please modify KERNELPATH, KERNELARCH and TOOLPREFIX to meet your environment
#
export KERNELPATH=<path of kernel header>
export TOOLCHAIN=<path of toolchain>
export ANDROID_X86_PROJ_PATH=<path of Android-x86 project>
export KERNELARCH=i386
export CROSS_COMPILE=${TOOLCHAIN}/i686-linux-android-
export TOOLPREFIX=${CROSS_COMPILE}
export ANDROID_BSP_VERSION=<rome-usb-ax86-kk, rome-usb-ax86-l, tf-sdio-ax86-kk>

export KERNELPATH=/lib/modules/${shell uname -r}/build
export KERNELARCH=i386
export TOOLPREFIX=

export ANDROID_X86_PROJ_VENDOR_PATH=${ANDROID_X86_PROJ_PATH}/out/target/product/x86/system/vendor
export ANDROID_X86_PROJ_WLANFW_PATH=${ANDROID_X86_PROJ_PATH}/out/target/product/x86/system/lib/firmware
export ANDROID_X86_PROJ_BTFW_PATH=${ANDROID_X86_PROJ_PATH}/out/target/product/x86/system/lib/firmware/ar3k
export ANDROID_X86_PROJ_WLAN_PATH=${ANDROID_X86_PROJ_WLANFW_PATH}/wlan



export CONFIG_NO_USE_BACKPORTS=y
export CONFIG_CFG80211_DEPEND_ON_KERNEL=y
# for backports
export KLIB=${KERNELPATH}
export KLIB_BUILD=${KERNELPATH}

# Use local libnl library or not
export BUILD_LIBNL=y
export INCLUDE_LIBNL32_HEADER=${ATH_TOPDIR}/apps/libnl-3.2.25/include
export INCLUDE_LIBNL32_LIB=-lm ${ATH_TOPDIR}/apps/libnl-3.2.25/lib/.libs/libnl-3.a
export INCLUDE_LIBNL32_GENL_LIB =-lm ${ATH_TOPDIR}/apps/libnl-3.2.25/lib/.libs/libnl-genl-3.a

# Use local openssl library or not
#export BUILD_OPENSSL=y
#export INCLUDE_OPENSSL_HEADER=${ATH_TOPDIR}/apps/openssl-1.0.1f/include
#export INCLUDE_OPENSSL_LIB=${ATH_TOPDIR}/apps/openssl-1.0.1f/ ${ATH_TOPDIR}/apps/openssl-1.0.1f/libssl.a -ldl
#export INCLUDE_OPENSSL_LIB=${ATH_TOPDIR}/apps/openssl-1.0.1f/

# Put one copy of firmware to local PC or not. Need root privilege.
export BUILD_DRIVERFW_TOLOCAL=y

# Build regdb into cfg80211.ko
export CONFIG_CFG80211_INTERNAL_REGDB=y

# PMF (11W)
export CONFIG_PMF_SUPPORT=y

# Rome IF
export CONFIG_ROME_IF=usb
export CONFIG_HIF_USB_TASKLET=1

